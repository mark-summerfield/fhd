fhd.go

fhd_test.go

README.md

st.sh

# NOTE

    STATE
    key filename string
    value state enum # monitored unmonitored ignored

    SAVES
    key sid int # > 0
    value bucket
	key filename string # see below for special cases
	value struct { 
		content blob
		sha256 blob
		csid int # > 0 if content and sha256 are empty (see below)
		}

In a SAVES value's bucket there are two special non-filename keys
- *when datetime # save timestamp
- *comment string

The initial monitor creates the STATE and SAVES, populates STATE setting
state to monitored and then does a save. It creates a new sid and
corresponding value bucket and sets the bucket's `*when` and `*comment`
and for each file adds the filename as key and sets its value struct's
content to the file's content, sha256 to the content's sha256, and the
csid to 0.

On subsequent saves the filenames to use are all those in STATE whose
state is monitored. For each file to save generate its sha256 and
compare that with the sha256s of its predecessor (or predecessor's
predecessor if its predecessor's csid > 0, and so on) - if a match is
found, set content and sha256 to empty and csid to the matched one;
otherwise populate content and the sha256 and set csid to 0.

# vim: syn=yaml
