# TODO tests!
# Maybe create test data corresponding to test saves, e.g.,
#   tdata/1/one.txt
#   tdata/1/two.svg
#   tdata/1/three.png
#   tdata/2/one.txt # changed
#   tdata/2/two.svg # changed
#   tdata/2/four.txt # added
#   tdata/3/one.txt # changed
#   tdata/3/three.png # changed
#   tdata/4/one.txt # changed
#   tdata/4/two.svg # changed
#   tdata/4/three.png # changed
#   tdata/4/four.txt # changed
# Then for tests,
#   cd tdata/1
#   do work e.g., for 1 monitor (implicit save) to tdata.fhd & extract to check
#   mv tdata.fhd ../2
#   cd ../2
#   do work e.g., save & extract to check tdata.fhd
#   mv tdata.fhd ../3
#   cd ../3
#   do work e.g., save & extract to check tdata.fhd
#   mv tdata.fhd ../4
#   cd ../4
#   do work e.g., save & extract to check tdata.fhd

# TODO implement Rename() once I figure out how!
# TODO implement Compact()
# TODO implement Delete()
# TODO implement Purge()
# TODO can I support branches (& therefore merge)?

fhd.go # Save
fhdx.go
dump.go
entry.go
state.go
flag.go
saveinfo.go
sid.go
marshal.go
util.go
consts.go

fhd_test.go

go.mod

README.md

st.sh

# NOTE

    "config" bucket
	key string # e.g., key="format" value=1
	value any  # e.g., key="ignore" value=bucket key=filename value=Îµ

    "states" bucket
	key filename string
	value StateInfo {
	    monitored bool
	    sid int # the most recent sid this file was saved into
	    mimetype string # so clients can see if they can offer diffs
	}
	# if renamed only keep newname here

    "saves" bucket
	key sid int # > 0
	value bucket
	    "*when" time.Time
	    "*comment" string
	    # then > 0 of:
	    key filename string
	    value Entry

# vim: syn=yaml
